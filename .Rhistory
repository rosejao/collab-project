low_2007 <- c(23.6, 14.0, 27.0, 36.8, 47.6, 57.7, 58.9, 61.2, 53.3, 48.5, 31.0, 23.6)
high_2014 <- c(28.8, 28.5, 37.0, 56.8, 69.7, 79.7, 78.5, 77.8, 74.1, 62.6, 45.3, 39.9)
low_2014 <- c(12.7, 14.3, 18.6, 35.5, 49.9, 58.0, 60.0, 58.6, 51.7, 45.2, 32.2, 29.1)
data <- data.frame(month, high_2000, low_2000, high_2007, low_2007, high_2014, low_2014)
#The default order will be alphabetized unless specified as below:
data$month <- factor(data$month, levels = data[["month"]])
p <- plot_ly(data, x = ~month, y = ~high_2014, name = 'High 2014', type = 'scatter', mode = 'lines',
line = list(color = 'rgb(205, 12, 24)', width = 4)) %>%
add_trace(y = ~low_2014, name = 'Low 2014', line = list(color = 'rgb(22, 96, 167)', width = 4)) %>%
add_trace(y = ~high_2007, name = 'High 2007', line = list(color = 'rgb(205, 12, 24)', width = 4, dash = 'dash')) %>%
add_trace(y = ~low_2007, name = 'Low 2007', line = list(color = 'rgb(22, 96, 167)', width = 4, dash = 'dash')) %>%
add_trace(y = ~high_2000, name = 'High 2000', line = list(color = 'rgb(205, 12, 24)', width = 4, dash = 'dot')) %>%
add_trace(y = ~low_2000, name = 'Low 2000', line = list(color = 'rgb(22, 96, 167)', width = 4, dash = 'dot')) %>%
layout(title = "Average High and Low Temperatures in New York",
xaxis = list(title = "Months"),
yaxis = list (title = "Temperature (degrees F)"))
View(p)
library(plotly)
library(dplyr)
month <- c('January', 'February', 'March', 'April', 'May', 'June', 'July',
'August', 'September', 'October', 'November', 'December')
high_2000 <- c(32.5, 37.6, 49.9, 53.0, 69.1, 75.4, 76.5, 76.6, 70.7, 60.6, 45.1, 29.3)
low_2000 <- c(13.8, 22.3, 32.5, 37.2, 49.9, 56.1, 57.7, 58.3, 51.2, 42.8, 31.6, 15.9)
high_2007 <- c(36.5, 26.6, 43.6, 52.3, 71.5, 81.4, 80.5, 82.2, 76.0, 67.3, 46.1, 35.0)
low_2007 <- c(23.6, 14.0, 27.0, 36.8, 47.6, 57.7, 58.9, 61.2, 53.3, 48.5, 31.0, 23.6)
high_2014 <- c(28.8, 28.5, 37.0, 56.8, 69.7, 79.7, 78.5, 77.8, 74.1, 62.6, 45.3, 39.9)
low_2014 <- c(12.7, 14.3, 18.6, 35.5, 49.9, 58.0, 60.0, 58.6, 51.7, 45.2, 32.2, 29.1)
data <- data.frame(month, high_2000, low_2000, high_2007, low_2007, high_2014, low_2014)
#The default order will be alphabetized unless specified as below:
data$month <- factor(data$month, levels = data[["month"]])
p <- plot(data, x = ~month, y = ~high_2014, name = 'High 2014', type = 'scatter', mode = 'lines',
line = list(color = 'rgb(205, 12, 24)', width = 4)) %>%
add_trace(y = ~low_2014, name = 'Low 2014', line = list(color = 'rgb(22, 96, 167)', width = 4)) %>%
add_trace(y = ~high_2007, name = 'High 2007', line = list(color = 'rgb(205, 12, 24)', width = 4, dash = 'dash')) %>%
add_trace(y = ~low_2007, name = 'Low 2007', line = list(color = 'rgb(22, 96, 167)', width = 4, dash = 'dash')) %>%
add_trace(y = ~high_2000, name = 'High 2000', line = list(color = 'rgb(205, 12, 24)', width = 4, dash = 'dot')) %>%
add_trace(y = ~low_2000, name = 'Low 2000', line = list(color = 'rgb(22, 96, 167)', width = 4, dash = 'dot')) %>%
layout(title = "Average High and Low Temperatures in New York",
xaxis = list(title = "Months"),
yaxis = list (title = "Temperature (degrees F)"))
library(plotly)
library(plotly)
library(dplyr)
month <- c('January', 'February', 'March', 'April', 'May', 'June', 'July',
'August', 'September', 'October', 'November', 'December')
high_2000 <- c(32.5, 37.6, 49.9, 53.0, 69.1, 75.4, 76.5, 76.6, 70.7, 60.6, 45.1, 29.3)
low_2000 <- c(13.8, 22.3, 32.5, 37.2, 49.9, 56.1, 57.7, 58.3, 51.2, 42.8, 31.6, 15.9)
high_2007 <- c(36.5, 26.6, 43.6, 52.3, 71.5, 81.4, 80.5, 82.2, 76.0, 67.3, 46.1, 35.0)
low_2007 <- c(23.6, 14.0, 27.0, 36.8, 47.6, 57.7, 58.9, 61.2, 53.3, 48.5, 31.0, 23.6)
high_2014 <- c(28.8, 28.5, 37.0, 56.8, 69.7, 79.7, 78.5, 77.8, 74.1, 62.6, 45.3, 39.9)
low_2014 <- c(12.7, 14.3, 18.6, 35.5, 49.9, 58.0, 60.0, 58.6, 51.7, 45.2, 32.2, 29.1)
data <- data.frame(month, high_2000, low_2000, high_2007, low_2007, high_2014, low_2014)
#The default order will be alphabetized unless specified as below:
data$month <- factor(data$month, levels = data[["month"]])
p <- plot_ly(data, x = ~month, y = ~high_2014, name = 'High 2014', type = 'scatter', mode = 'lines',
line = list(color = 'rgb(205, 12, 24)', width = 4)) %>%
add_trace(y = ~low_2014, name = 'Low 2014', line = list(color = 'rgb(22, 96, 167)', width = 4)) %>%
add_trace(y = ~high_2007, name = 'High 2007', line = list(color = 'rgb(205, 12, 24)', width = 4, dash = 'dash')) %>%
add_trace(y = ~low_2007, name = 'Low 2007', line = list(color = 'rgb(22, 96, 167)', width = 4, dash = 'dash')) %>%
add_trace(y = ~high_2000, name = 'High 2000', line = list(color = 'rgb(205, 12, 24)', width = 4, dash = 'dot')) %>%
add_trace(y = ~low_2000, name = 'Low 2000', line = list(color = 'rgb(22, 96, 167)', width = 4, dash = 'dot')) %>%
layout(title = "Average High and Low Temperatures in New York",
xaxis = list(title = "Months"),
yaxis = list (title = "Temperature (degrees F)"))
View(p)
View(p)
p <- plot_ly(data, x = ~month, y = ~high_2014, name = 'High 2014', type = 'scatter', mode = 'lines',
line = list(color = 'rgb(205, 12, 24)', width = 4)) %>%
add_trace(y = ~low_2014, name = 'Low 2014', line = list(color = 'rgb(22, 96, 167)', width = 4)) %>%
add_trace(y = ~high_2007, name = 'High 2007', line = list(color = 'rgb(205, 12, 24)', width = 4, dash = 'dash')) %>%
add_trace(y = ~low_2007, name = 'Low 2007', line = list(color = 'rgb(22, 96, 167)', width = 4, dash = 'dash')) %>%
add_trace(y = ~high_2000, name = 'High 2000', line = list(color = 'rgb(205, 12, 24)', width = 4, dash = 'dot')) %>%
add_trace(y = ~low_2000, name = 'Low 2000', line = list(color = 'rgb(22, 96, 167)', width = 4, dash = 'dot')) %>%
layout(title = "Average High and Low Temperatures in New York",
xaxis = list(title = "Months"),
yaxis = list (title = "Temperature (degrees F)"))
library(plotly)
library(dplyr)
month <- c('January', 'February', 'March', 'April', 'May', 'June', 'July',
'August', 'September', 'October', 'November', 'December')
high_2000 <- c(32.5, 37.6, 49.9, 53.0, 69.1, 75.4, 76.5, 76.6, 70.7, 60.6, 45.1, 29.3)
low_2000 <- c(13.8, 22.3, 32.5, 37.2, 49.9, 56.1, 57.7, 58.3, 51.2, 42.8, 31.6, 15.9)
high_2007 <- c(36.5, 26.6, 43.6, 52.3, 71.5, 81.4, 80.5, 82.2, 76.0, 67.3, 46.1, 35.0)
low_2007 <- c(23.6, 14.0, 27.0, 36.8, 47.6, 57.7, 58.9, 61.2, 53.3, 48.5, 31.0, 23.6)
high_2014 <- c(28.8, 28.5, 37.0, 56.8, 69.7, 79.7, 78.5, 77.8, 74.1, 62.6, 45.3, 39.9)
low_2014 <- c(12.7, 14.3, 18.6, 35.5, 49.9, 58.0, 60.0, 58.6, 51.7, 45.2, 32.2, 29.1)
data <- data.frame(month, high_2000, low_2000, high_2007, low_2007, high_2014, low_2014)
#The default order will be alphabetized unless specified as below:
data$month <- factor(data$month, levels = data[["month"]])
plot_ly(data, x = ~month, y = ~high_2014, name = 'High 2014', type = 'scatter', mode = 'lines',
line = list(color = 'rgb(205, 12, 24)', width = 4)) %>%
add_trace(y = ~low_2014, name = 'Low 2014', line = list(color = 'rgb(22, 96, 167)', width = 4)) %>%
add_trace(y = ~high_2007, name = 'High 2007', line = list(color = 'rgb(205, 12, 24)', width = 4, dash = 'dash')) %>%
add_trace(y = ~low_2007, name = 'Low 2007', line = list(color = 'rgb(22, 96, 167)', width = 4, dash = 'dash')) %>%
add_trace(y = ~high_2000, name = 'High 2000', line = list(color = 'rgb(205, 12, 24)', width = 4, dash = 'dot')) %>%
add_trace(y = ~low_2000, name = 'Low 2000', line = list(color = 'rgb(22, 96, 167)', width = 4, dash = 'dot')) %>%
layout(title = "Average High and Low Temperatures in New York",
xaxis = list(title = "Months"),
yaxis = list (title = "Temperature (degrees F)"))
library(plotly)
library(dplyr)
month <- c('January', 'February', 'March', 'April', 'May', 'June', 'July',
'August', 'September', 'October', 'November', 'December')
high_2000 <- c(32.5, 37.6, 49.9, 53.0, 69.1, 75.4, 76.5, 76.6, 70.7, 60.6, 45.1, 29.3)
low_2000 <- c(13.8, 22.3, 32.5, 37.2, 49.9, 56.1, 57.7, 58.3, 51.2, 42.8, 31.6, 15.9)
high_2007 <- c(36.5, 26.6, 43.6, 52.3, 71.5, 81.4, 80.5, 82.2, 76.0, 67.3, 46.1, 35.0)
low_2007 <- c(23.6, 14.0, 27.0, 36.8, 47.6, 57.7, 58.9, 61.2, 53.3, 48.5, 31.0, 23.6)
high_2014 <- c(28.8, 28.5, 37.0, 56.8, 69.7, 79.7, 78.5, 77.8, 74.1, 62.6, 45.3, 39.9)
low_2014 <- c(12.7, 14.3, 18.6, 35.5, 49.9, 58.0, 60.0, 58.6, 51.7, 45.2, 32.2, 29.1)
data <- data.frame(month, high_2000, low_2000, high_2007, low_2007, high_2014, low_2014)
#The default order will be alphabetized unless specified as below:
data$month <- factor(data$month, levels = data[["month"]])
p <- plot_ly(data, x = ~month, y = ~high_2014, name = 'High 2014', type = 'scatter', mode = 'lines',
line = list(color = 'rgb(205, 12, 24)', width = 4)) %>%
add_trace(y = ~low_2014, name = 'Low 2014', line = list(color = 'rgb(22, 96, 167)', width = 4)) %>%
add_trace(y = ~high_2007, name = 'High 2007', line = list(color = 'rgb(205, 12, 24)', width = 4, dash = 'dash')) %>%
add_trace(y = ~low_2007, name = 'Low 2007', line = list(color = 'rgb(22, 96, 167)', width = 4, dash = 'dash')) %>%
add_trace(y = ~high_2000, name = 'High 2000', line = list(color = 'rgb(205, 12, 24)', width = 4, dash = 'dot')) %>%
add_trace(y = ~low_2000, name = 'Low 2000', line = list(color = 'rgb(22, 96, 167)', width = 4, dash = 'dot')) %>%
layout(title = "Average High and Low Temperatures in New York",
xaxis = list(title = "Months"),
yaxis = list (title = "Temperature (degrees F)"))
p
version(plotly)
version("plotly")
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
library(plotly)
library(dplyr)
month <- c('January', 'February', 'March', 'April', 'May', 'June', 'July',
'August', 'September', 'October', 'November', 'December')
high_2000 <- c(32.5, 37.6, 49.9, 53.0, 69.1, 75.4, 76.5, 76.6, 70.7, 60.6, 45.1, 29.3)
low_2000 <- c(13.8, 22.3, 32.5, 37.2, 49.9, 56.1, 57.7, 58.3, 51.2, 42.8, 31.6, 15.9)
high_2007 <- c(36.5, 26.6, 43.6, 52.3, 71.5, 81.4, 80.5, 82.2, 76.0, 67.3, 46.1, 35.0)
low_2007 <- c(23.6, 14.0, 27.0, 36.8, 47.6, 57.7, 58.9, 61.2, 53.3, 48.5, 31.0, 23.6)
high_2014 <- c(28.8, 28.5, 37.0, 56.8, 69.7, 79.7, 78.5, 77.8, 74.1, 62.6, 45.3, 39.9)
low_2014 <- c(12.7, 14.3, 18.6, 35.5, 49.9, 58.0, 60.0, 58.6, 51.7, 45.2, 32.2, 29.1)
data <- data.frame(month, high_2000, low_2000, high_2007, low_2007, high_2014, low_2014)
#The default order will be alphabetized unless specified as below:
data$month <- factor(data$month, levels = data[["month"]])
p <- plot_ly(data, x = ~month, y = ~high_2014, name = 'High 2014', type = 'scatter', mode = 'lines',
line = list(color = 'rgb(205, 12, 24)', width = 4)) %>%
add_trace(y = ~low_2014, name = 'Low 2014', line = list(color = 'rgb(22, 96, 167)', width = 4)) %>%
add_trace(y = ~high_2007, name = 'High 2007', line = list(color = 'rgb(205, 12, 24)', width = 4, dash = 'dash')) %>%
add_trace(y = ~low_2007, name = 'Low 2007', line = list(color = 'rgb(22, 96, 167)', width = 4, dash = 'dash')) %>%
add_trace(y = ~high_2000, name = 'High 2000', line = list(color = 'rgb(205, 12, 24)', width = 4, dash = 'dot')) %>%
add_trace(y = ~low_2000, name = 'Low 2000', line = list(color = 'rgb(22, 96, 167)', width = 4, dash = 'dot')) %>%
layout(title = "Average High and Low Temperatures in New York",
xaxis = list(title = "Months"),
yaxis = list (title = "Temperature (degrees F)"))
library(plotly)
library("plotly", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library(plotly)
library(dplyr)
month <- c('January', 'February', 'March', 'April', 'May', 'June', 'July',
'August', 'September', 'October', 'November', 'December')
high_2000 <- c(32.5, 37.6, 49.9, 53.0, 69.1, 75.4, 76.5, 76.6, 70.7, 60.6, 45.1, 29.3)
low_2000 <- c(13.8, 22.3, 32.5, 37.2, 49.9, 56.1, 57.7, 58.3, 51.2, 42.8, 31.6, 15.9)
high_2007 <- c(36.5, 26.6, 43.6, 52.3, 71.5, 81.4, 80.5, 82.2, 76.0, 67.3, 46.1, 35.0)
low_2007 <- c(23.6, 14.0, 27.0, 36.8, 47.6, 57.7, 58.9, 61.2, 53.3, 48.5, 31.0, 23.6)
high_2014 <- c(28.8, 28.5, 37.0, 56.8, 69.7, 79.7, 78.5, 77.8, 74.1, 62.6, 45.3, 39.9)
low_2014 <- c(12.7, 14.3, 18.6, 35.5, 49.9, 58.0, 60.0, 58.6, 51.7, 45.2, 32.2, 29.1)
data <- data.frame(month, high_2000, low_2000, high_2007, low_2007, high_2014, low_2014)
#The default order will be alphabetized unless specified as below:
data$month <- factor(data$month, levels = data[["month"]])
p <- plot_ly(data, x = ~month, y = ~high_2014, name = 'High 2014', type = 'scatter', mode = 'lines',
line = list(color = 'rgb(205, 12, 24)', width = 4)) %>%
add_trace(y = ~low_2014, name = 'Low 2014', line = list(color = 'rgb(22, 96, 167)', width = 4)) %>%
add_trace(y = ~high_2007, name = 'High 2007', line = list(color = 'rgb(205, 12, 24)', width = 4, dash = 'dash')) %>%
add_trace(y = ~low_2007, name = 'Low 2007', line = list(color = 'rgb(22, 96, 167)', width = 4, dash = 'dash')) %>%
add_trace(y = ~high_2000, name = 'High 2000', line = list(color = 'rgb(205, 12, 24)', width = 4, dash = 'dot')) %>%
add_trace(y = ~low_2000, name = 'Low 2000', line = list(color = 'rgb(22, 96, 167)', width = 4, dash = 'dot')) %>%
layout(title = "Average High and Low Temperatures in New York",
xaxis = list(title = "Months"),
yaxis = list (title = "Temperature (degrees F)"))
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
i <- top_countries("Food", "Potatoes and products", "Y1999")
i
i <- top_countries("Food", "Potatoes and products", "Y1999")
i
top <- data %>%
filter(Element == "Food", Item == "Potatoes and products") %>%
select(Area, c("Y1999")) %>%
top_n(n = 5)
View(top)
i <- plot_ly(top, type = "bar")
i
i <- plot_ly(x = top$Area, y = top$Y1999, type = "bar")
i
top <- data %>%
filter(Element == "Food", Item == "Potatoes and products") %>%
select(Area, c("Y1999")) %>%
top_n(n = 2)
top <- data %>%
filter(Element == "Food", Item == "Potatoes and products") %>%
select(Area, c("Y1999")) %>%
top_n(n = 2)
x <- c("asdf", "qwer")
i <- plot_ly(x = x, y = top$Y1999, type = "bar")
i
i <- plot_ly(x = top$Area, y = top$Y1999, type = "bar")
i
i <- plot_ly(x = x, y = top$Y1999, type = "bar")
i
is.string(top$Area)
is.string("top")
x <- top$Area
top <- data %>%
filter(Element == "Food", Item == "Potatoes and products") %>%
select(Area, c("Y1999")) %>%
arrange(c("Y1999")) %>%
top_n(n = 2)
View(top)
top <- data %>%
filter(Element == "Food", Item == "Potatoes and products") %>%
select(Area, c("Y1999")) %>%
arrange(c("Y1999"))
top <- data %>%
filter(Element == "Food", Item == "Potatoes and products") %>%
select(Area, Y1999) %>%
arrange(Y1999)
View(top)
top <- data %>%
filter(Element == "Food", Item == "Potatoes and products") %>%
select(Area, Y1999) %>%
arrange(-Y1999)
top <- data %>%
filter(Element == "Food", Item == "Potatoes and products") %>%
select(Area, Y1999) %>%
arrange(-Y1999) %>%
head(x = 2)
x <- top$Area %>%
head(x = 2)
x <- top$Area
top <- data %>%
filter(Element == "Food", Item == "Potatoes and products") %>%
select(Area, Y1999) %>%
top_n(2, wt = Y1999)
x <- top$Area
top <- data %>%
filter(Element == "Food", Item == "Potatoes and products") %>%
select(Area, Y1999) %>%
top_n(n = 2, wt = Y1999)
x <- top$Area
is.string("top")
i <- top_countries("Food", "Potatoes and products", "Y1999")
i
library(ggplot2)
data <- read.csv("data/FAO.csv")
top <- data %>%
filter(Element == "Food", Item == "Potatoes and products") %>%
select(Area, Y1999) %>%
top_n(n = 2, wt = Y1999)
x <- top$Area
i <- plot_ly(x = x, y = top$Y1999, type = "bar")
i <- top_countries("Food", "Potatoes and products", "Y1999")
top <- data %>%
filter(Element == "Food", Item == "Potatoes and products") %>%
select(Area, Y1999) %>%
top_n(n = 2, wt = Y1999)
top <- data %>%
filter(Element == "Food", Item == "Potatoes and products") %>%
select(Area, Y1999) %>%
top_n(n = 2, wt = Y1999)
data <- data[-c(4789:4907), ]
## getting all countries
countries <- data %>%
distinct(Area)
## getting all distinct items in dataset
items <- data %>%
distinct(Item)
## getting the two distinct elements in dataset
elements <- data %>%
distinct(Element)
## Set up
library(dplyr)
library(plotly)
library(ggplot2)
data <- read.csv("data/FAO.csv")
## deleting Dote d'Ivoire data because the name is corupted
data <- data[-c(4789:4907), ]
## getting all countries
countries <- data %>%
distinct(Area)
## getting all distinct items in dataset
items <- data %>%
distinct(Item)
## getting the two distinct elements in dataset
elements <- data %>%
distinct(Element)
top <- data %>%
filter(Element == "Food", Item == "Potatoes and products") %>%
select(Area, Y1999) %>%
top_n(n = 2, wt = Y1999)
x <- top$Area
i <- plot_ly(x = x, y = top$Y1999, type = "bar")
i <- top_countries("Food", "Potatoes and products", "Y1999")
top_countries <- function(element_choice = "Food", item_choice, year_choice) {
top <- data %>%
filter(Element == element_choice, Item == item_choice) %>%
select(Area, c(year_choice)) %>%
top_n(n = 5)
plot3 <- plot_ly(x = top$Area, y = top[, 2], histfunc = "sum", type = "bar") %>%
layout(yaxis = list(type = "linear"))
return(plot3)
}
top <- data %>%
filter(Element == "Food", Item == "Potatoes and products") %>%
select(Area, Y1999) %>%
top_n(n = 2, wt = Y1999)
x <- top$Area
i <- plot_ly(x = x, y = top$Y1999, type = "bar")
i <- top_countries("Food", "Potatoes and products", "Y1999")
View(top)
x <- top$Area
shiny::runApp()
runApp()
runApp()
runApp()
top <- data %>%
filter(Element == "Food", Item == "Beer") %>%
select(Area, Y2000) %>%
top_n(n = 5, wt = Y1999)
top <- data %>%
filter(Element == "Food", Item == "Beer") %>%
select(Area, Y2000) %>%
top_n(n = 5, wt = Y2000)
View(top)
x <- top$Area
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- read.csv("data/FAO.csv")
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- data[-c(4789:4907), ]
data <- read.csv("data/FAO.csv")
data <- data[-c(4789:4907), ]
plot3 <- plot_ly(x = top$Area, y = top[, 2], histfunc = "sum", type = "histogram") %>%
layout(yaxis = list(type = "linear"))
plot3
plot3 <- plot_ly(x = x, y = top[, 2], histfunc = "sum", type = "histogram") %>%
layout(yaxis = list(type = "linear"))
plot3
top <- data %>%
filter(Element == "Food", Item == "Beer") %>%
select(Area, Y2000)
View(top)
t <- top_n(x = top, n = 5, wt = Y2000)
View(t)
top <- data %>%
filter(Element == "Food", Item == "Beer") %>%
select(Area, Y2000) %>%
arrange(-Y2000)
View(top)
top <- data %>%
filter(Element == "Food", Item == "Beer") %>%
select(Area, Y2000) %>%
arrange(-Y2000) %>%
head(5)
plot3 <- plot_ly(x = top$Area, y = top[, 2], histfunc = "sum", type = "histogram") %>%
layout(yaxis = list(type = "linear"))
plot3
plot3 <- plot_ly(x = top$Area, y = top[, 2], histfunc = "sum", type = "histogram") %>%
layout(yaxis = list(type = "linear"))
runApp()
x <- top$Area
top <- data %>%
filter(Element == "Food", Item == "Beer") %>%
select(Area, Y2000) %>%
arrange(-Y2000) %>%
head(5)
x <- top[,1]
x <- top[1]
x <- top[,1]
t <- data.frame(top)
t
View(t)
x <- t[,1]
top <- data %>%
filter(Element == "Food", Item == "Beer") %>%
select(Area, Y2000) %>%
arrange(-Y2000) %>%
head(2)
x <- c("asdf", "asdf")
plot3 <- plot_ly(x = x, y = top[, 2], histfunc = "sum", type = "histogram") %>%
layout(yaxis = list(type = "linear"))
plot3
top <- data %>%
filter(Element == "Food", Item == "Beer") %>%
select(Area, Y2000) %>%
top_n(n = 2, wt = Y2000)
View(top)
x <- c("asdf", "asdf")
x <- list("asdf", "asdf")
plot3 <- plot_ly(x = x, y = top[, 2], histfunc = "sum", type = "histogram") %>%
layout(yaxis = list(type = "linear"))
plot3
plot3 <- plot_ly(x = x, y = top[, 2], type = "histogram") %>%
layout(yaxis = list(type = "linear"))
plot3 <- plot_ly(y = top[, 2], type = "histogram") %>%
layout(yaxis = list(type = "linear"))
plot3
plot3 <- plot_ly(x = top[, 2], type = "histogram") %>%
layout(yaxis = list(type = "linear"))
plot3
p <- ggplot(top) +
geom_bar(top, mapping = aes(x = Area,
y = Y2000,
stat = "identity", fill = color)) +
labs(
title = "Race Population per Midwest State",
x = "State",
y = "Number of People"
)
p
library(ggplot2)
p <- ggplot(top) +
geom_bar(top, mapping = aes(x = Area,
y = Y2000,
stat = "identity", fill = color)) +
labs(
title = "Race Population per Midwest State",
x = "State",
y = "Number of People"
)
p
p <- ggplot(top) +
geom_bar(top, mapping = aes(x = Area,
y = Y2000,
stat = "identity")) +
labs(
title = "Race Population per Midwest State",
x = "State",
y = "Number of People"
)
p
p <- ggplot(top) +
geom_bar(top, mapping = aes(x = ~Area,
y = ~Y2000,
stat = "identity")) +
labs(
title = "Race Population per Midwest State",
x = "State",
y = "Number of People"
)
p
p <- ggplot(top) +
geom_bar(top, mapping = aes(x = Area,
y = Y2000)) +
labs(
title = "Race Population per Midwest State",
x = "State",
y = "Number of People"
)
p
x <- list("asdf", "ashdf")
plot3 <- plot_ly(x = x, y = top[, 2], type = "histogram") %>%
layout(yaxis = list(type = "linear"))
plot3
x <- list("asdf", "ashdf")
plot3 <- plot_ly(x = x, y = top[, 2], type = "histogram") %>%
layout(yaxis = list(type = "linear"))
plot3
x <- c("asdf", "asjkkjhdf")
plot3 <- plot_ly(x = x, y = top[, 2], type = "histogram") %>%
layout(yaxis = list(type = "linear"))
plot3 <- plot_ly(x = x, y = top[, 2], type = "histogram")
plot
plot3
top <- data %>%
filter(Element == "Food", Item == "Beer") %>%
select(Area, Y2000) %>%
top_n(n = 2, wt = Y2000)
t <- data.frame(top)
View(t)
x <- top$Area %>%
head(2)
x <- top$Area %>%
head(2)
